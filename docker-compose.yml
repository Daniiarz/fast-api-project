version: "3.8"

volumes:
  postgres-data:
  cache:

services:
  db:
    image: postgres:14-alpine
    volumes:
      - postgres-data:/var/lib/postgresql/data
    environment:
      - POSTGRES_DB=test
      - POSTGRES_PASSWORD=test
      - POSTGRES_USER=test
    ports:
      - "5445:5432"

  redis:
    restart: always
    image: redis:alpine
    ports:
      - '6336:6379'
    volumes:
      - cache:/data

  redis-insight:
    image: redislabs/redisinsight
    ports:
      - "8001:8001"

#  kafka:
#    image: confluentinc/cp-kafka
#    ports:
#      - "9092:9092"
#      - "29092:29092"
#    depends_on:
#      - zookeeper
#    environment:
#      - KAFKA_ZOOKEEPER_CONNECT=zookeeper:32181
#      - KAFKA_OFFSETS_TOPIC_REPLICATION_FACTOR=1
#      - KAFKA_TRANSACTION_STATE_LOG_REPLICATION_FACTOR=1
#      - KAFKA_TRANSACTION_STATE_LOG_MIN_ISR=1
#      - KAFKA_GROUP_INITIAL_REBALANCE_DELAY_MS=100
#      - KAFKA_LISTENER_SECURITY_PROTOCOL_MAP=PLAINTEXT:PLAINTEXT,PLAINTEXT_HOST:PLAINTEXT
#      - KAFKA_ADVERTISED_LISTENERS=PLAINTEXT://kafka:9092,PLAINTEXT_HOST://localhost:29092
#      - KAFKA_BROKER_ID=1

#  kafka-ui:
#    depends_on:
#      - kafka
#      - schema-registry
#    image: provectuslabs/kafka-ui:latest
#    environment:
#      KAFKA_CLUSTERS_0_NAME: local
#      KAFKA_CLUSTERS_0_ZOOKEEPER: zookeeper:32181
#      KAFKA_CLUSTERS_0_BOOTSTRAPSERVERS: kafka:9092
#      KAFKA_CLUSTERS_0_SCHEMAREGISTRY: http://schema-registry:8081
#    ports:
#      - "8080:8080"

#  schema-registry:
#    image: confluentinc/cp-schema-registry
#    depends_on:
#      - kafka
#      - zookeeper
#    ports:
#      - "8081:8081"
#    environment:
#      - SCHEMA_REGISTRY_KAFKASTORE_BOOTSTRAP_SERVERS=kafka:9092
#      - SCHEMA_REGISTRY_HOST_NAME=schema-registry
#      - SCHEMA_REGISTRY_DEBUG=true
#
#  zookeeper:
#    image: "confluentinc/cp-zookeeper"
#    environment:
#      - ZOOKEEPER_CLIENT_PORT=32181